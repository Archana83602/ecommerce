<div class="address-inputs">
  <div class="text-input">
    <%= form.label :name, "#{I18n.t("spree.name")}:" %>
    <%= form.text_field :name,
      required: true,
      autofocus: true,
      autocomplete: "#{address_type} given-name",
      maxlength: 25,
      pattern: '[^0-9]*',
      title: 'Please enter up to 25 characters without numbers'
    %>
  </div>



  <% if Spree::Config[:company] %>
    <div class="text-input">
      <%= form.label :company, "#{I18n.t("spree.company")}:" %>
      <%= form.text_field :company, autocomplete: "#{address_type} organization" %>
    </div>
  <% end %>

 <div class="text-input">
  <%= form.label :address1, "#{I18n.t("spree.street_address")}:" %>
  <%= form.text_field :address1,
    required: true,
    autocomplete: "#{address_type} address-line1",
    maxlength: 100,
    title: 'Provided street address is too long'
  %>
</div>



  <div class="text-input">
    <%= form.label :address2, "#{I18n.t("spree.street_address_2")}:" %>
    <%= form.text_field :address2,
     required: true,
     autocomplete: "#{address_type} address-line1",
     maxlength: 100,
     title: 'Provided street address is too long',
     autocomplete: "#{address_type} address-line2" %>
  </div>


  <div class="text-input">
    <%= form.label :city, "#{I18n.t("spree.city")}:" %>
    <%= form.text_field :city,
     required: true,

     maxlength: 20,
     title: 'Provided street address is too long',
     autocomplete: "#{address_type} address-level2" %>
  </div>


  <div class="select-input">
    <%= form.label :country_id, "#{I18n.t("spree.country")}:" %>

    <%= form.collection_select(
      :country_id,
      available_countries,
      :id,
      :name,
      {},
      autocomplete: "#{address_type} country-name",
      class: 'js-trigger-state-change',
      required: true,
      "data-state-container": "##{address_type} .js-address-fields"
    ) %>
  </div>


  <% if Spree::Config[:address_requires_state] %>
    <% have_states = !address.country.states.empty? %>

<span class="js-address-fields" style="display: none;">
  <div class="select-input">
    <%= form.label :state_id, "#{I18n.t("spree.state")}:" %>

    <%= form.collection_select(
      :state_id,
      address.country.states,
      :id,
      :name,
      { include_blank: true },
      autocomplete: "#{address_type} address-level1",
      class: 'required',
      disabled: !have_states,
      required: false
    ) %>
  </div>

  <%= form.text_field(
    :state_name,
    class: !have_states ? 'required' : '',
    style: have_states ? 'display: none;' : '',
    disabled: have_states,
    autocomplete: "#{address_type} address-level1"
  ) %>
</span>
<noscript>
  <%= form.text_field(
    :state_name,
    class: 'required',
    autocomplete: "#{address_type} address-level1",
    required: true
  ) %>
</noscript>
  <% end %>
 <div class="text-input">
  <%= form.label :zipcode, "#{I18n.t("spree.zip")}:" %>
  <%= form.text_field :zipcode,
    required: address.require_zipcode?,
    autocomplete: "#{address_type} postal-code",
    maxlength: 6,
    pattern: '\d{6}',
    title: 'Please enter a 6-digit ZIP code',
    id: 'zipcode-input' # Add an ID to the input field for easier selection in JavaScript
  %>
  <div id="zipcode-error-message" style="color: red;"></div> <!-- Error message container -->
</div>

  <div class="text-input">
  <%= form.label :phone, "#{I18n.t("spree.phone")}:" %>

  <%= form.telephone_field :phone,
    required: address.require_phone?,
    autocomplete: "#{address_type} home tel",
    title: 'Please enter a 10-digit phone number',
    id: 'phone-input' # Add an ID to the input field for easier selection in JavaScript
  %>
</div>
  <div id="phone-error-message" style="color: red;"></div> <!-- Error message container -->


  <% if Spree::Config[:alternative_shipping_phone] %>
    <div class="text-input">
      <%= form.label :alternative_phone, "#{I18n.t("spree.alternative_phone")}:" %>
      <%= form.telephone_field :alternative_phone, autocomplete: "#{address_type} tel" %>
    </div>
  <% end %>
</div>

<!-- Include jQuery (if not already included) -->
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
   document.addEventListener('DOMContentLoaded', function () {
    // Get the phone input and error message elements
    var phoneInput = document.getElementById('phone-input');
    var errorMessage = document.getElementById('phone-error-message');

    // Function to validate and limit phone number length
    function validatePhoneNumber() {
      // Remove non-numeric characters from the input
      var sanitizedInput = phoneInput.value.replace(/\D/g, '');

      // Update the input value with the sanitized version
      phoneInput.value = sanitizedInput;

      // Check if the sanitized input has more than 10 digits
      if (sanitizedInput.length > 10) {
        // Truncate the input to 10 digits
        phoneInput.value = sanitizedInput.slice(0, 10);
      }

      // Check if the sanitized input has exactly 10 digits
      if (sanitizedInput.length === 10) {
        // Valid phone number
        errorMessage.textContent = ''; // Clear error message
      } else {
        // Invalid phone number
        errorMessage.textContent = 'Please enter a valid 10-digit phone number';
      }
    }

    // Attach the event listener to the phone input
    phoneInput.addEventListener('input', validatePhoneNumber);


    var zipcodeInput = document.getElementById('zipcode-input');
    var errorMessage = document.getElementById('zipcode-error-message');

    // Function to validate and limit ZIP code length
    function validateZipcode() {
      // Remove non-numeric characters from the input
      var sanitizedInput = zipcodeInput.value.replace(/\D/g, '');

      // Update the input value with the sanitized version
      zipcodeInput.value = sanitizedInput;

      // Check if the sanitized input has more than 6 digits
      if (sanitizedInput.length > 6) {
        // Truncate the input to 6 digits
        zipcodeInput.value = sanitizedInput.slice(0, 6);
      }

      // Check if the sanitized input has exactly 6 digits
      if (sanitizedInput.length === 6) {
        // Valid ZIP code
        errorMessage.textContent = ''; // Clear error message
      } else {
        // Invalid ZIP code
        errorMessage.textContent = 'Please enter a valid 6-digit ZIP code';
      }
    }

    // Attach the event listener to the ZIP code input
    zipcodeInput.addEventListener('input', validateZipcode);
  });
  
</script>